{"version":3,"sources":["api.js","components/PageLoading.js","routes/Home/PageError.js","components/Section.js","components/PageTitle.js","routes/Detail/CoverVideo.js","routes/Detail/Detail.js","routes/Home/Main.js","routes/Home/Contents.js","routes/Home/Home.js","Globalstyle.js","components/Header.js","routes/Search/Search.js","components/ScrollMove.js","App.js","components/Footer.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","term","query","loadingAni","keyframes","LoadingWrap","styled","div","Load","PageLoading","Wrap","Title","h3","Desc","p","PageError","to","SSection","section","Section","children","PageTitle","pagetitle","CoverImg","iframe","Video","CoverVideo","covervideo","Img","src","title","frameborder","allow","allowfullscreen","style","backgroundImage","Container","ConWrap","Genre","RunTime","Release","Overview","Genrewrap","Detail","movieId","useParams","useState","nowDetail","setDetails","nowvideo","setVideo","loading","setLoading","pageError","setPageError","useEffect","detailData","a","movieDetail","data","videoData","results","length","key","error","console","log","backdrop_path","runtime","genres","map","genre","index","name","release_date","overview","SMain","TitleWrap","h1","Main","aaa","slice","MovieTitle","SwiperCore","use","Navigation","Contents","movietitle","Playing","spaceBetween","slidesPerView","breakpoints","navigation","play","pathname","Home","nowPlay","setNowPlay","popPlay","setPopPlay","upPlay","setUpPlay","NowResults","PopResults","UpResults","movieData","GlobalStyles","createGlobalStyle","reset","Headers","InHeader","Logo","MenuWrap","Menu","Header","bg","setBg","window","addEventListener","sct","pageYOffset","backgroundColor","Form","form","Input","input","SearchWrap","Con","Search","useForm","mode","register","getValues","handleSubmit","nowSearch","setSearch","onSubmit","required","type","placeholder","ScrollMove","location","useLocation","scrollTo","App","path","exact","SFooter","footer","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9043de49.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"840b176b5a353d29629ed18b975991ae\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  popular: () => api.get(\"movie/popular\"),\n  topRated: () => api.get(\"movie/top_rated\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  detail: (id) => api.get(`movie/${id}`),\n  video: (id) => api.get(`movie/${id}/videos`),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import styled, { keyframes } from \"styled-components\";\n\nconst loadingAni = keyframes`\n0%{\n    transform:rotateZ(0)\n}100%{\n    transform: rotateZ(360deg);\n}\n`;\nconst LoadingWrap = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Load = styled.div`\n  width: 100px;\n  height: 100px;\n  border: 10px solid crimson;\n  border-radius: 50%;\n  border-color: crimson transparent crimson transparent;\n  animation: ${loadingAni} 1s infinite;\n`;\n\nexport const PageLoading = () => {\n  return (\n    <LoadingWrap>\n      <Load></Load>\n    </LoadingWrap>\n  );\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Wrap = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  padding-top: 300px;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst Title = styled.h3`\n  font-size: 100px;\n  font-weight: 800;\n  max-width: 500px;\n  text-align: center;\n`;\n\nconst Desc = styled.p`\n  font-size: 18px;\n  margin-top: 30px;\n  line-height: 30px;\n  font-weight: 300;\n  opacity: 0.8;\n  a {\n    color: crimson;\n    text-decoration: underline;\n    font-weight: 600;\n  }\n`;\n\nexport const PageError = () => {\n  return (\n    <Wrap>\n      <Title>Page Not Found</Title>\n      <Desc>\n        페이지를 찾을 수 없거나, 오류가 생겼습니다.\n        <br /> 뒤로가기 버튼을 클릭하시거나, {\"\"}\n        <Link to=\"/\">홈으로</Link> 가주세요.\n      </Desc>\n    </Wrap>\n  );\n};\n","import styled from \"styled-components\";\n\nconst SSection = styled.section`\n  padding: 0 80px;\n  @media screen and (max-width: 500px) {\n    padding: 0 15px;\n  }\n`;\n\nexport const Section = ({ children }) => {\n  return <SSection>{children}</SSection>;\n};\n","import { Helmet } from \"react-helmet-async\";\n\nexport const PageTitle = ({ pagetitle }) => {\n  return (\n    <Helmet>\n      <title>{`Sun movie | ${pagetitle}`}</title>\n    </Helmet>\n  );\n};\n","import styled from \"styled-components\";\n\nconst CoverImg = styled.iframe`\n  width: 45%;\n  height: 70vh;\n  background-color: gray;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 350px;\n  }\n`;\n\nconst Video = styled.iframe`\n  width: 45%;\n  height: 70vh;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 350px;\n  }\n`;\n\nexport const CoverVideo = ({ covervideo, Img }) => {\n  return (\n    <>\n      {covervideo ? (\n        <Video\n          src={`https://www.youtube.com/embed/${covervideo}`}\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        />\n      ) : (\n        <CoverImg\n          style={{\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${Img})`,\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport { PageLoading } from \"../../components/PageLoading\";\nimport { PageError } from \"../Home/PageError\";\nimport { Section } from \"../../components/Section\";\n// import { Helmet } from \"react-helmet-async\";\nimport { PageTitle } from \"../../components/PageTitle\";\nimport { CoverVideo } from \"./CoverVideo\";\n// import { Footer } from \"../../components/Footer\";\n\nconst Container = styled.div`\n  padding-top: 150px;\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 100px;\n  }\n`;\n\nconst ConWrap = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  padding-top: 50px;\n  @media screen and (max-width: 500px) {\n    width: 90%;\n    padding-top: 25px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 70px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  @media screen and (max-width: 500px) {\n    font-size: 28px;\n    margin-bottom: 18px;\n  }\n`;\n\nconst Genre = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 20px;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n\nconst RunTime = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 16px;\n  margin-bottom: 15px;\n  @media screen and (max-width: 500px) {\n    font-weight: 300;\n  }\n`;\n\nconst Release = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 16px;\n  margin-bottom: 15px;\n`;\n\nconst Overview = styled.p`\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 25px;\n  margin-bottom: 15px;\n`;\n\nconst Genrewrap = styled.p`\n  display: flex;\n  font-size: 20px;\n  font-weight: 400;\n  margin-bottom: 15px;\n  letter-spacing: 1px;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n    font-weight: 500;\n    letter-spacing: 0;\n    margin-bottom: 8px;\n  }\n`;\n\n// export const Detail = () => {\n//   const [nowDetails, setDetails] = useState();\n//   const [loading, setLoading] = useState(true);\n//   const [pageError, setPageError] = useState(false);\n\n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n//     try {\n//       const detailData = async () => {\n//         const { data: details } = await moviesApi.detail(movieId);\n\n//         setDetails(details);\n//       };\n//       detailData();\n//       setLoading(false);\n//     } catch (error) {\n//       setPageError(true);\n//     }\n//   }, []);\n\n//   console.log(nowDetails);\n//   return (\n//     <div>\n//       {loading ? (\n//         <PageLoading />\n//       ) : (\n//         <div>\n//           {pageError ? (\n//             <PageError></PageError>\n//           ) : (\n//             <Section>\n//               {nowDetails ? (\n//                 <Container>\n//                   <CoverImg\n//                     style={{\n//                       backgroundImage: `url(https://image.tmdb.org/t/p/original/${nowDetails.backdrop_path})`,\n//                     }}\n//                   />\n//                   <ConWrap>\n//                     <Title>{nowDetails.title}</Title>\n//                     장르,러닝타임,개봉일,오버뷰,\n//                   </ConWrap>\n//                 </Container>\n//               ) : null}\n//             </Section>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\nexport const Detail = () => {\n  const { movieId } = useParams();\n  const [nowDetail, setDetails] = useState();\n  const [nowvideo, setVideo] = useState();\n  const [loading, setLoading] = useState(true);\n  const [pageError, setPageError] = useState(false);\n\n  useEffect(() => {\n    try {\n      const detailData = async () => {\n        const { data: movieDetail } = await moviesApi.detail(movieId);\n\n        setDetails(movieDetail);\n\n        const {\n          data: { results: videoData },\n        } = await moviesApi.video(movieId);\n        // console.log(videoData);\n        videoData.length > 0 ? setVideo(videoData[0].key) : setVideo(\"\");\n      };\n      setLoading(false);\n      detailData();\n    } catch (error) {\n      setPageError(true);\n    }\n  }, [movieId]);\n\n  console.log(nowvideo);\n  // console.log(nowDetail);\n\n  return (\n    <div>\n      <PageTitle pagetitle={nowDetail && nowDetail.title} />\n      {loading ? (\n        <PageLoading />\n      ) : (\n        <div>\n          {pageError ? (\n            <PageError></PageError>\n          ) : (\n            <Section>\n              {nowDetail ? (\n                <Container>\n                  <CoverVideo\n                    covervideo={nowvideo}\n                    Img={nowDetail.backdrop_path}\n                  />\n\n                  <ConWrap>\n                    <Title>{nowDetail.title}</Title>\n                    <RunTime>{nowDetail.runtime}분</RunTime>\n                    <Genrewrap>\n                      장르 :{\" \"}\n                      {nowDetail.genres.map((genre, index) => (\n                        <Genre key={index}> &nbsp; {genre.name},</Genre>\n                      ))}\n                    </Genrewrap>\n                    <Release>{nowDetail.release_date}</Release>\n                    <Overview>{nowDetail.overview}</Overview>\n                  </ConWrap>\n                </Container>\n              ) : null}\n            </Section>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nconst SMain = styled.section`\n  width: 100%;\n  height: 900px;\n  background-color: #333;\n  background-size: cover;\n  background-position: top;\n  padding: 300px 0 0 80px;\n  @media screen and (max-width: 500px) {\n    height: 60vh;\n    padding: 200px 0 0 15px;\n  }\n`;\n\nconst TitleWrap = styled.div`\n  text-shadow: 0 0 10px rgba(0 0 0 / 70%);\n`;\n\nconst Title = styled.h1`\n  font-size: 100px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  @media screen and (max-width: 500px) {\n    font-size: 50px;\n  }\n`;\n\nconst Desc = styled.p`\n  font-size: 20px;\n  max-width: 600px;\n  width: 100%;\n  line-height: 30px;\n  font-weight: 300;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n    line-height: 22px;\n    width: 90%;\n  }\n`;\n\nexport const Main = ({ aaa }) => {\n  return (\n    <SMain\n      style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${aaa.backdrop_path})`,\n      }}\n    >\n      <TitleWrap>\n        <Title> {aaa.title} </Title>\n        <Desc> {aaa.overview.slice(0, 70) + \"...\"}</Desc>\n      </TitleWrap>\n    </SMain>\n  );\n};\n","import { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"../../styles/swiper.css\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// import { moviesApi } from \"../../api\";\n// import { useState } from \"react\";\n\nconst MovieTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  margin-top: 20px;\n  @media screen and (max-width: 500px) {\n    display: none;\n    margin-top: 10px;\n  }\n`;\n\nconst CoverImg = styled.div`\n  height: 250px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  @media screen and (max-width: 500px) {\n    height: 200px;\n    background-position: center;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  @media screen and (max-width: 500px) {\n    font-size: 25px;\n  }\n`;\n\nconst Container = styled.div`\n  margin-top: 100px;\n  @media screen and (max-width: 500px) {\n    margin-top: 50px;\n  }\n`;\n\nSwiperCore.use([Navigation]);\n\nexport const Contents = ({ movietitle, Playing }) => {\n  // const [nowPlay, setNowPlay] = useState();\n  // const [popPlay, setPopPlay] = useState();\n  // const [upPlay, setUpPlay] = useState();\n  const params = {\n    spaceBetween: 20,\n    slidesPerView: 4.3,\n    breakpoints: {\n      1024: {\n        spaceBetween: 20,\n        slidesPerView: 4.3,\n      },\n      320: {\n        spaceBetween: 10,\n        slidesPerView: 1.8,\n      },\n    },\n  };\n\n  return (\n    <Container>\n      <Title>{movietitle}</Title>\n      <Swiper {...params} navigation>\n        {Playing &&\n          Playing.map((play) => (\n            <SwiperSlide key={play.id}>\n              <Link to={{ pathname: `/detail/${play.id}` }}>\n                {/* 링크를 인식 못할 때는 pathname을 적는다  */}\n                <CoverImg\n                  style={{\n                    backgroundImage: `url(${\n                      play.backdrop_path\n                        ? `https://image.tmdb.org/t/p/original${play.backdrop_path}`\n                        : `https://i.ytimg.com/vi/5SuveFZ5_H0/maxresdefault.jpg`\n                    })`,\n                  }}\n                />\n                <MovieTitle>{play.title}</MovieTitle>\n              </Link>\n            </SwiperSlide>\n          ))}\n      </Swiper>\n    </Container>\n  );\n};\n","// import styled from \"styled-components\";\nimport { Section } from \"../../components/Section\";\nimport { moviesApi } from \"../../api\";\nimport { useEffect, useState } from \"react\";\nimport { PageLoading } from \"../../components/PageLoading\";\nimport { Main } from \"./Main\";\nimport { PageError } from \"./PageError\";\n// import { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"../../styles/swiper.css\";\n// import SwiperCore, { Navigation } from \"swiper\";\n// import { Link } from \"react-router-dom\";\nimport { Contents } from \"./Contents\";\n// import { Footer } from \"../../components/Footer\";\n\nexport const Home = () => {\n  const [nowPlay, setNowPlay] = useState();\n  const [popPlay, setPopPlay] = useState();\n  const [upPlay, setUpPlay] = useState();\n  const [loading, setLoading] = useState(true);\n  const [pageError, setPageError] = useState(false);\n\n  useEffect(() => {\n    const movieData = async () => {\n      try {\n        const {\n          data: { results: NowResults },\n        } = await moviesApi.nowPlaying();\n        setNowPlay(NowResults);\n\n        const {\n          data: { results: PopResults },\n        } = await moviesApi.popular();\n        setPopPlay(PopResults);\n\n        const {\n          data: { results: UpResults },\n        } = await moviesApi.upcoming();\n        setUpPlay(UpResults);\n\n        setLoading(false);\n      } catch (error) {\n        setPageError(true);\n        console.log(error);\n        //debug\n      }\n    };\n\n    movieData();\n  }, []);\n  // console.log(\"현재상영\", nowPlay);\n  // console.log(\"인기\", popPlay);\n  // console.log(\"상영예정\", upPlay);\n\n  return (\n    <div>\n      {loading ? (\n        <PageLoading />\n      ) : (\n        <div>\n          {pageError ? (\n            <PageError></PageError>\n          ) : (\n            <div>{popPlay ? <Main aaa={popPlay[9]} /> : null}</div>\n          )}\n        </div>\n      )}\n\n      <Section>\n        <Contents movietitle=\"현재 상영 영화\" Playing={nowPlay} />\n        <Contents movietitle=\"상영 예정\" Playing={upPlay} />\n        <Contents movietitle=\"인기 영화\" Playing={popPlay} />\n      </Section>\n    </div>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nexport const GlobalStyles = createGlobalStyle`${reset}\n*{box-sizing:border-box;}\n\nbody{\n    font-family: 'Noto Sans KR', sans-serif;\n    background-color:#1d1d1d;\n    color:white;\n    letter-spacing:-1px;\n\n}\n\na{\n    text-decoration: none;\n    color:white;\n}\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Headers = styled.div`\n  width: 100%;\n  height: 60px;\n  float: left;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 99;\n  @media screen and (max-width: 500px) {\n    padding: 0 10px;\n  }\n`;\n\nconst InHeader = styled.div`\n  width: 92%;\n  height: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.h1`\n  font-size: 28px;\n  font-weight: 600;\n  a {\n    color: crimson;\n  }\n  /* text-align: center; */\n`;\n\nconst MenuWrap = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Menu = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n  margin-left: 50px;\n`;\n\nexport const Header = () => {\n  const [bg, setBg] = useState();\n  const scrollHandler = () => {\n    const sct = window.pageYOffset;\n\n    if (sct >= 100) {\n      setBg(\"#1d1d1d\");\n    } else {\n      setBg(\"transparent\");\n    }\n  };\n  window.addEventListener(\"scroll\", scrollHandler);\n\n  return (\n    <Headers style={{ backgroundColor: bg }}>\n      <InHeader>\n        <Logo>\n          <Link to=\"/\">SUN</Link>\n        </Logo>\n        <MenuWrap>\n          <Menu>\n            <Link to=\"/\">Home</Link>\n          </Menu>\n\n          <Menu>\n            <Link to=\"/Search\">Search</Link>\n          </Menu>\n        </MenuWrap>\n      </InHeader>\n    </Headers>\n  );\n};\n","import { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport { Section } from \"../../components/Section\";\n// import { Testing } from \"../../components/Testing\";\nimport { PageError } from \"../Home/PageError\";\nimport { PageLoading } from \"../../components/PageLoading\";\nimport { Link } from \"react-router-dom\";\nimport { PageTitle } from \"../../components/PageTitle\";\n\nconst Container = styled.div`\n  margin-top: 150px;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  all: unset;\n  width: 97%;\n  padding: 20px;\n  border: 1px solid #555;\n  &::placeholder {\n    font-size: 20px;\n  }\n  font-size: 20px;\n`;\n\nconst SearchWrap = styled.div`\n  width: 100%;\n  margin-top: 100px;\n  display: grid;\n  row-gap: 50px;\n  column-gap: 20px;\n  grid-template-columns: repeat(5, 1fr);\n`;\n\nconst Con = styled.div``;\n\nconst Title = styled.h1`\n  font-size: 18px;\n  font-weight: 600;\n  margin-top: 20px;\n  @media screen and (max-width: 500px) {\n    display: none;\n    margin-top: 10px;\n  }\n`;\n\nconst CoverImg = styled.div`\n  /* width: 315px; */\n  height: 180px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Search = () => {\n  const { register, getValues, handleSubmit } = useForm({\n    mode: \"onChange\",\n  });\n\n  const [nowSearch, setSearch] = useState();\n  const [loading, setLoading] = useState(true);\n  const [pageError, setPageError] = useState(false);\n\n  const onSubmit = async () => {\n    const { term } = getValues();\n    try {\n      const {\n        data: { results },\n      } = await moviesApi.search(term);\n\n      // if(results.length <= 0){\n      //   setNosearch(\"검색 엑스\")\n      // }else{\n      //   setNosearch(\"\")\n\n      // }\n      setSearch(results);\n      setLoading(false);\n      console.log(await moviesApi.search(term));\n    } catch (error) {\n      setPageError(true);\n      console.log(error);\n    }\n  };\n  console.log(nowSearch);\n  return (\n    <div>\n      {/* 1.서치 페이지 스타일\n      2.인풋태그 내용 알아오기 (react-hook-form)\n      3.api 에서 search를 가져와 매개변수로 인풋태그 내용 전달하기\n       */}\n      <PageTitle title={\"검색\"} />\n      <Section>\n        <Container>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Input\n              {...register(\"term\", {\n                required: true,\n              })}\n              type=\"text\"\n              placeholder=\"검색...\"\n            />\n          </Form>\n          {pageError ? (\n            <PageError />\n          ) : (\n            <>\n              <SearchWrap>\n                {nowSearch && loading ? (\n                  <PageLoading />\n                ) : (\n                  nowSearch &&\n                  nowSearch.map((play) => (\n                    <Con key={play.id}>\n                      <Link to={`/detail/${play.id}`}>\n                        <CoverImg\n                          style={{\n                            backgroundImage: `url(${\n                              play.backdrop_path\n                                ? `https://image.tmdb.org/t/p/original/${play.backdrop_path}`\n                                : `https://i.ytimg.com/vi/5SuveFZ5_H0/maxresdefault.jpg`\n                            })`,\n                          }}\n                        />\n                        <Title>{play.title}</Title>\n                      </Link>\n                    </Con>\n                  ))\n                )}\n              </SearchWrap>\n            </>\n          )}\n        </Container>\n      </Section>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ScrollMove = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return null;\n};\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Detail } from \"./routes/Detail/Detail\";\nimport { Home } from \"./routes/Home/Home\";\nimport { GlobalStyles } from \"./Globalstyle\";\nimport { Header } from \"./components/Header\";\nimport { Search } from \"./routes/Search/Search\";\nimport { ScrollMove } from \"./components/ScrollMove\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyles />\n      <ScrollMove />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n\n        <Route path=\"/detail/:movieId\">\n          <Detail />\n        </Route>\n\n        <Route path=\"/Search\">\n          <Search />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nconst SFooter = styled.footer`\n  height: 80px;\n  margin-top: 200px;\n  border-top: 1px solid #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #555;\n  @media screen and (max-width: 500px) {\n    margin-top: 100px;\n    height: 80px;\n  }\n`;\n\nexport const Footer = () => {\n  return <SFooter>&copy; unoung</SFooter>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Footer } from \"./components/Footer\";\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <App />\n      <Footer />\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}